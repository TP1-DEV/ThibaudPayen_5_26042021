window.onload=async()=>{await createCartPage();const cart=Cart.getCart();cart.updateHeader()};const createCartPage=async()=>{const cart=Cart.getCart(),myArray=[];for(const item of cart.getItems()){const product=await getData(url+item.id),cartItems=document.getElementById("cart-items"),newCard=createCard(cartItems,product),box=newCard.querySelector(".card-box"),cartItemComponent=new CartItemComponent(item,box);myArray.push(cartItemComponent);const component=cartItemComponent.getComponent();newCard.appendChild(component);const desc=newCard.querySelector(".card-box-body-text");desc.textContent="Couleur: "+item.color}const cartItemsFooter=document.getElementById("cart-items");createBackToHome(cartItemsFooter);const summary=document.getElementById("summary");createTotalSummary(summary);const buttonForm=document.getElementById("form-button");buttonFormOrder(buttonForm)},updateSumInfo=e=>{const cart=e.detail.cart,totalItems=document.getElementById("total-items");totalItems.textContent="Nombre d'articles : "+cart.itemsQty();const totalPrice=document.getElementById("total-price");totalPrice.textContent="Prix total = "+formatPrice(cart.totalPrices(),!0)};document.addEventListener("updateEvent",updateSumInfo);class CartItemComponent{component;quantityNumber;constructor(item,id){this.item=item,this.quantityComponent=this.createQuantity(),this.sumPriceComponent=this.createSumPrice(),this.removeComponent=this.createRemove(),this.component=this.createCartItemComponent(id),this.card=id.parentElement}getComponent(){return this.component}createQuantity(){const quantity=createElementFactory("div",{class:"card-component-quantity"}),down=createElementFactory("span",{class:"down"},quantity);down.textContent="-",this.quantityNumber=createElementFactory("input",{type:"text",value:this.item.quantity},quantity);const up=createElementFactory("span",{class:"up"},quantity);return up.textContent="+",up.addEventListener("click",()=>{const input=up.previousElementSibling;let value=parseInt(input.value,10);value=isNaN(value)?0:value,value++,this.updateQty(value)}),down.addEventListener("click",()=>{const input=down.nextElementSibling;let value=parseInt(input.value,10);value>1?(value=isNaN(value)?0:value,value--,this.updateQty(value)):this.removeItem()}),this.quantityNumber.addEventListener("change",()=>{let value=parseInt(this.quantityNumber.value,10);this.updateQty(value)}),quantity}createSumPrice(){const sumPrice=createElementFactory("p",{class:"card-component-price"});return sumPrice.textContent=formatPrice(this.item.quantity*this.item.price),sumPrice}createRemove(){const remove=createElementFactory("div",{class:"card-component-remove"}),iconRemove=createElementFactory("i",{class:"fas fa-trash"},remove);return remove.addEventListener("click",()=>{this.removeItem()}),remove}createCartItemComponent(){const cardComponent=createElementFactory("div",{class:"card-component"});return cardComponent.appendChild(this.quantityComponent),cardComponent.appendChild(this.sumPriceComponent),cardComponent.appendChild(this.removeComponent),cardComponent}updateQty(qty){this.quantityNumber.value=qty,this.sumPriceComponent.textContent=formatPrice(qty*this.item.price),Cart.getCart().updateItemQty(this.item.id,this.item.color,qty)}removeItem(){Cart.getCart().removeItem(this.item.id,this.item.color),this.card.remove()}}