const getData=async request=>{try{const response=await fetch(request);if(response.ok){const data=response.json();return data}console.error("Serveur status :",response.status)}catch(error){console.error(error)}},getSearchParams=term=>{const searchParams=new URLSearchParams(window.location.search);return searchParams.get(term)};function numberWithSpaces(number){return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g," ")}const formatPrice=(price,taxes=!1)=>{const priceString=price.toString(),centsIndex=priceString.length-2,centsValue=priceString.substring(centsIndex),integerValue=priceString.substring(0,centsIndex);let formatedPrice=integerValue;return"0"===priceString&&(formatedPrice=0),"00"!==centsValue&&"0"!==priceString&&(formatedPrice+=","+centsValue),formatedPrice+="€",taxes&&(formatedPrice+=" TTC"),numberWithSpaces(formatedPrice)},createElementFactory=(type,attributes,parent)=>{const element=document.createElement(type);for(let key in attributes)element.setAttribute(key,attributes[key]);return parent&&parent.appendChild(element),element},createCard=(element,items,links=!1,prices=!1)=>{const card=createElementFactory("article",{class:"card-article"},element);let box="";if(links){const link=createElementFactory("a",{class:"card-article-link"},card);link.href="product.html?id="+items._id,box=createElementFactory("div",{class:"card-box"},link)}else box=createElementFactory("div",{class:"card-box"},card);const img=createElementFactory("img",{class:"card-box-img"},box);img.src=items.imageUrl;const body=createElementFactory("div",{class:"card-box-body"},box),title=createElementFactory("h5",{class:"card-box-body-title"},body);title.textContent=items.name;const desc=createElementFactory("p",{class:"card-box-body-text"},body);if(desc.textContent=items.description,prices){footer=createElementFactory("div",{class:"card-box-body-price"},body);const price=createElementFactory("p",{class:"card-box-body-price-text"},footer);price.textContent=formatPrice(items.price)}return card},buttonAddToCart=(element,item)=>{element.addEventListener("click",()=>{const cart=Cart.getCart(),selectedOption=document.getElementById("inputGroupSelect01").value;cart.addItem(item._id,selectedOption,item.price),cart.update()})},createBackToHome=element=>{const backToHome=createElementFactory("a",{class:"back-home"},element);backToHome.href="index.html";const backArrow=createElementFactory("i",{class:"fas fa-arrow-left"},backToHome),textBackArrow=createElementFactory("span",{class:"font-weight-bold"},backToHome);textBackArrow.textContent="Retour à l'acceuil"},createTotalSummary=element=>{const cart=Cart.getCart(),totalItems=createElementFactory("div",{id:"total-items"},element);totalItems.textContent="Nombre d'articles : "+cart.itemsQty();const totalPrice=createElementFactory("div",{id:"total-price"},summary);totalPrice.textContent="Prix total = "+formatPrice(cart.totalPrices(),!0)},updateCartQty=e=>{const cart=e.detail.cart,cartQtyIcon=document.getElementById("cart-qty");cart.itemsQty()>0?(cartQtyIcon.classList.add("cart-qty"),cartQtyIcon.textContent=cart.itemsQty()):(cartQtyIcon.classList.remove("cart-qty"),cartQtyIcon.textContent="")};document.addEventListener("updateEvent",updateCartQty);class Cart{static instance;items;updateEvent;constructor(){const cartStorage=localStorage.getItem("cart");this.items=null!=cartStorage?JSON.parse(cartStorage):[],this.updateEvent=new CustomEvent("updateEvent",{detail:{cart:this}})}static getCart(){return Cart.instance||(Cart.instance=new Cart),Cart.instance}addItem(id,color,price,quantity=1){const addCartItem={id:id,color:color,price:price,quantity:quantity},existingItem=this.items.find(item=>item.id===addCartItem.id&&item.color===addCartItem.color);existingItem?existingItem.quantity++:this.items.push(addCartItem),this.update()}removeItem(id,color){let index=this.items.findIndex(item=>item.id===id&&item.color===color);index>=0&&(this.items.splice(index,1),this.update())}updateItemQty(id,color,quantity){const item=this.items.find(item=>item.id===id&&item.color===color);item.quantity=quantity,this.update()}itemsQty(){let itemsQty=0;for(const item of this.items)itemsQty+=item.quantity;return itemsQty}totalPrices(){let totalPrices=0;for(const item of this.items)totalPrices+=item.price*item.quantity;return totalPrices}getItems(){return this.items}getItemsId(){let itemsId=[];for(const item of this.items)itemsId.push(item.id);return itemsId}update(){localStorage.setItem("cart",JSON.stringify(this.items)),document.dispatchEvent(this.updateEvent)}updateHeader(){document.dispatchEvent(this.updateEvent)}}class Contact{constructor(firstName,lastName,address,city,email){this.firstName=firstName,this.lastName=lastName,this.address=address,this.city=city,this.email=email}}const formContact=()=>{const formOrder=document.forms["form-order"],firstName=formOrder.firstName.value,lastName=formOrder.lastName.value,address=formOrder.address.value,city=formOrder.city.value,email=formOrder.email.value,nameValidation=/[a-zA-Z- ]/,addressValidation=/[a-zA-Z0-9- ]/,emailValidation=/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/,nameIsValid=nameValidation.test(firstName)&&nameValidation.test(lastName)&&nameValidation.test(city),addressIsValid=addressValidation.test(address),emailIsValid=emailValidation.test(email);if(!1!==nameIsValid&&!1!==addressIsValid&&!1!==emailIsValid)return contact=new Contact(firstName,lastName,address,city,email);alert("Erreur de saisie")},buttonFormOrder=element=>{element.addEventListener("click",async e=>{e.preventDefault();const orderData={contact:formContact(),products:Cart.getCart().getItemsId()},request=new Request(url+"order",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(orderData)}),data=await getData(request);data.orderId?(console.log(data),window.location="command.html?orderId="+data.orderId):console.error(error)})};